# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

    steps:
      - checkout

      - run: export SYMFONY_VERSION=~4.4
      - run: export ES_VERSION=7.11.1

      - run: sudo apt update
      #- run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer require --no-update symfony/framework-bundle:${SYMFONY_VERSION}
      - run: composer install --dev --no-interaction

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # Setup Elasticsearch
      - run: wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-${ES_VERSION}-linux-x86_64.tar.gz
      - run: tar -xzf elasticsearch-${ES_VERSION}-linux-x86_64.tar.gz
      - run: ./elasticsearch-${ES_VERSION}/bin/elasticsearch -d

      # run tests
      - run: export XDEBUG_MODE=coverage
      - run: wget -q --waitretry=1 --retry-connrefused -T 10 -O - http://127.0.0.1:9200
      - run: vendor/bin/simple-phpunit --coverage-clover=Tests/App/build/clover.xml 2>/dev/null
      - run: vendor/bin/phpcs -np --standard=PSR2 --ignore=vendor/,Tests/App/,var/ ./

